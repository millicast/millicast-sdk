{
    "<p>Manages connection with a secure WebSocket path to signal the Millicast server\nand establishes a WebRTC connection to broadcast a MediaStream.</p>\n<p>Before you can broadcast, you will need:</p>\n<ul>\n<li>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Media_Streams_API\">MediaStream</a> which has at most one audio track and at most one video track. This will be used for stream the contained tracks.</p>\n</li>\n<li>\n<p>A connection path that you can get from {@link Director} module or from your own implementation based on <a href=\"https://dash.millicast.com/docs.html?pg=how-to-broadcast-in-js#get-connection-paths-sect\">Get a Connection Path</a>.</p>\n</li>\n</ul>": "<p>Manages connection with a secure WebSocket path to signal the Millicast server\nand establishes a WebRTC connection to broadcast a MediaStream.</p>\n<p>Before you can broadcast, you will need:</p>\n<ul>\n<li>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Media_Streams_API\">MediaStream</a> which has at most one audio track and at most one video track. This will be used for stream the contained tracks.</p>\n</li>\n<li>\n<p>A connection path that you can get from {@link Director} module or from your own implementation based on <a href=\"https://dash.millicast.com/docs.html?pg=how-to-broadcast-in-js#get-connection-paths-sect\">Get a Connection Path</a>.</p>\n</li>\n</ul>",
    "<p>Millicast existing stream name.</p>": "<p>Millicast existing stream name.</p>",
    "<p>Callback function executed when a new token is needed.</p>": "<p>Callback function executed when a new token is needed.</p>",
    "<p>Enable auto reconnect to stream.</p>": "<p>Enable auto reconnect to stream.</p>",
    "<p>Starts broadcast to an existing stream name.</p>\n<p>In the example, <code>getYourMediaStream</code> and <code>getYourPublisherConnection</code> is your own implementation.</p>": "<p>Starts broadcast to an existing stream name.</p>\n<p>In the example, <code>getYourMediaStream</code> and <code>getYourPublisherConnection</code> is your own implementation.</p>",
    "<p>General broadcast options.</p>": "<p>General broadcast options.</p>",
    "<p>Source unique id. Only avialable if stream is multisource.</p>": "<p>Source unique id. Only avialable if stream is multisource.</p>",
    "<p>True to modify SDP for support stereo. Otherwise False.</p>": "<p>True to modify SDP for support stereo. Otherwise False.</p>",
    "<p>True to modify SDP for supporting dtx in opus. Otherwise False.</p>": "<p>True to modify SDP for supporting dtx in opus. Otherwise False.</p>",
    "<p>True to modify SDP for supporting absolute capture time header extension. Otherwise False.</p>": "<p>True to modify SDP for supporting absolute capture time header extension. Otherwise False.</p>",
    "<p>MediaStream to offer in a stream. This object must have\n1 audio track and 1 video track, or at least one of them. Alternative you can provide both tracks in an array.</p>": "<p>MediaStream to offer in a stream. This object must have\n1 audio track and 1 video track, or at least one of them. Alternative you can provide both tracks in an array.</p>",
    "<p>Broadcast bandwidth. 0 for unlimited.</p>": "<p>Broadcast bandwidth. 0 for unlimited.</p>",
    "<p>Disable the opportunity to send video stream.</p>": "<p>Disable the opportunity to send video stream.</p>",
    "<p>Disable the opportunity to send audio stream.</p>": "<p>Disable the opportunity to send audio stream.</p>",
    "<p>Codec for publish stream.</p>": "<p>Codec for publish stream.</p>",
    "<p>Enable simulcast. <strong>Only available in Google Chrome and with H.264 or VP8 video codecs.</strong></p>": "<p>Enable simulcast. <strong>Only available in Google Chrome and with H.264 or VP8 video codecs.</strong></p>",
    "<p>Selected scalability mode. You can get the available capabilities using <a href=\"PeerConnection#.getCapabilities\">PeerConnection.getCapabilities</a> method.\n<strong>Only available in Google Chrome.</strong></p>": "<p>Selected scalability mode. You can get the available capabilities using <a href=\"PeerConnection#.getCapabilities\">PeerConnection.getCapabilities</a> method.\n<strong>Only available in Google Chrome.</strong></p>",
    "<p>Options to configure the new RTCPeerConnection.</p>": "<p>Options to configure the new RTCPeerConnection.</p>",
    "<p>Enable stream recording. If record is not provided, use default Token configuration. <strong>Only available in Tokens with recording enabled.</strong></p>": "<p>Enable stream recording. If record is not provided, use default Token configuration. <strong>Only available in Tokens with recording enabled.</strong></p>",
    "<p>Promise object which resolves when the broadcast started successfully.</p>": "<p>Promise object which resolves when the broadcast started successfully.</p>",
    "<p>True to modify SDP for supporting aom dependency descriptor header extension. Otherwise False.</p>": "<p>True to modify SDP for supporting aom dependency descriptor header extension. Otherwise False.</p>",
    "<p>Specify which events will be delivered by the server (any of &quot;active&quot; | &quot;inactive&quot;).*</p>": "<p>Specify which events will be delivered by the server (any of &quot;active&quot; | &quot;inactive&quot;).*</p>",
    "<p>Initialize recording in an active stream.</p>": "<p>Initialize recording in an active stream.</p>",
    "<p>Finalize recording in an active stream.</p>": "<p>Finalize recording in an active stream.</p>",
    "<p>Manages connection with a secure WebSocket path to signal the Millicast server\nand establishes a WebRTC connection to broadcast a MediaStream.</p>\n<p>Before you can broadcast, you will need:</p>\n<ul>\n<li>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Media_Streams_API\">MediaStream</a> which has at most one audio track and at most one video track. This will be used for stream the contained tracks.</p>\n</li>\n<li>\n<p>A connection path that you can get from {@link Director} module or from your own implementation.</p>\n</li>\n</ul>": "<p>Manages connection with a secure WebSocket path to signal the Millicast server\nand establishes a WebRTC connection to broadcast a MediaStream.</p>\n<p>Before you can broadcast, you will need:</p>\n<ul>\n<li>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Media_Streams_API\">MediaStream</a> which has at most one audio track and at most one video track. This will be used for stream the contained tracks.</p>\n</li>\n<li>\n<p>A connection path that you can get from {@link Director} module or from your own implementation.</p>\n</li>\n</ul>",
    "<p>Specify which events will be delivered by the server (any of &quot;active&quot; | &quot;inactive&quot; | &quot;viewercount&quot;).*</p>": "<p>Specify which events will be delivered by the server (any of &quot;active&quot; | &quot;inactive&quot; | &quot;viewercount&quot;).*</p>"
}